# yaml-language-server: $schema=https://taskfile.dev/schema.json

# This is just a targeting system for helmfile deployments based on some env vars

version: "3"
vars:
  HELMFILE_BASE_PATH: '{{ .HELMFILE_BASE_PATH | default "./helmfiles" }}'
  HELMFILE_TARGET: '{{ .HELMFILE_TARGET | default "cluster.default" }}'

env:
  # XDG_CACHE_HOME: "{{.ROOT_DIR}}/venv"
  # XDG_CONFIG_HOME: "{{.ROOT_DIR}}/venv"
  # XDG_DATA_HOME: "{{.ROOT_DIR}}/venv"
  KUBECONFIG:
    sh: |
      if [ -f "{{.ROOT_DIR}}/kubeconfig" ]; then
        echo "{{.ROOT_DIR}}/kubeconfig"; 
      else 
        echo "$HOME/.kube/config"; 
      fi
  HELMFILE_FILE_PATH: "{{.HELMFILE_BASE_PATH}}/{{.HELMFILE_TARGET}}.yml"

tasks:
  show:
    desc: Show environment and variable settings
    silent: true
    cmds:
      - |
        #echo "HELMFILE_TARGET: {{.HELMFILE_TARGET}}"
        echo "HELMFILE_BASE_PATH: {{.HELMFILE_BASE_PATH}}"
        echo "HELMFILE_FILE_PATH: ${HELMFILE_FILE_PATH}"
        echo "KUBECONFIG: ${KUBECONFIG}"

  show:helm:
    desc: Show helm settings
    summary: |
      Show helm settings used in this task runner.

      This can be useful for exporting the values for sourcing into your own shell
    silent: true
    cmds:
      - echo "export XDG_CACHE_HOME=$XDG_CACHE_HOME"
      - echo "export XDG_CONFIG_HOME=$XDG_CONFIG_HOME"
      - echo "export XDG_DATA_HOME=$XDG_DATA_HOME"

  init:
    desc: Initialize helmfile
    silent: true
    cmds:
      - helmfile init
      - rm -rf ~/.local/share/helm/plugins/helm-git*
      - helm plugin install https://github.com/aslafy-z/helm-git --version 0.16.1

  stacks:
    desc: Lists all available helmfile stacks
    silent: true
    cmds:
      - ls {{.HELMFILE_BASE_PATH}}/*.yml | xargs -n1 basename | sed -e 's/\.yml//g'

  apply:
    desc: Apply all resources from state file only when there are changes
    cmds:
      - helmfile apply

  sync:
    desc: Sync HELMFILE_TARGET with cluster
    cmds:
      - helmfile sync

  repos:
    desc: Helm repo add and update
    cmds:
      - helmfile repos

  list:
    desc: List resources in state file
    cmds:
      - helmfile list

  diff:
    desc: diffs HELMFILE_TARGET with cluster
    cmds:
      - helmfile diff

  test:
    desc: Tests HELMFILE_TARGET on cluster
    cmds:
      - helmfile test

  destroy:
    desc: Removes HELMFILE_TARGET from cluster
    cmds:
      - helmfile destroy

  build:
    desc: Builds helmfile YAML only
    cmds:
      - helmfile build

  template:
    desc: template HELMFILE_TARGET YAML manifest for cluster
    cmds:
      - helmfile template

  deps:
    desc: deps HELMFILE_TARGET with cluster
    cmds:
      - helmfile deps
